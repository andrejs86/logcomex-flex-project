{
  "description": "Voice Flow - 26/03/2023",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "event": "incomingMessage"
        },
        {
          "next": "GetClientInformation",
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": 1550,
          "y": -1190
        }
      }
    },
    {
      "name": "GetClientInformation",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "validateAssociatedCompany",
          "event": "success"
        },
        {
          "next": "validateAssociatedCompany",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1230,
          "y": -900
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{\n\"typeSearch\": \"phone\",\n\"clientEmail\": \"{{trigger.call.From}}\"\n}",
        "url": "https://serverless-functions-4443-dev.twil.io/hubspot-integration/search-client"
      }
    },
    {
      "name": "get_client_ddi",
      "type": "run-function",
      "transitions": [
        {
          "next": "setVariablesFlow",
          "event": "success"
        },
        {
          "next": "setVariablesFlow",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "ZS94a60054fb8b17808bdccffc44d1d2d0",
        "environment_sid": "ZE59c5da4f5ff7e98f2ce35f39df892e5d",
        "offset": {
          "x": 2410,
          "y": -900
        },
        "function_sid": "ZH1db2c25c65250de3c509732e25e56b31",
        "parameters": [
          {
            "value": "{{trigger.call.From}}",
            "key": "clientNumber"
          },
          {
            "value": "{{widgets.GetClientInformation.parsed.data.properties.idioma_fluxo}}",
            "key": "idioma"
          }
        ],
        "url": "https://serverless-functions-4443-dev.twil.io/ddi-identifier/identify"
      }
    },
    {
      "name": "checkIsWorking",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "outBusinessHour",
          "event": "noMatch"
        },
        {
          "next": "validateInternacional",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": ["{{widgets.isWorking.parsed.isWorking}}"],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.isWorking.parsed.isWorking}}",
        "offset": {
          "x": 2020,
          "y": -240
        }
      }
    },
    {
      "name": "isWorking",
      "type": "run-function",
      "transitions": [
        {
          "next": "checkIsWorking",
          "event": "success"
        },
        {
          "next": "checkIsWorking",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "ZS6dfd3ba3686bb3fb7a0a5fe1bf51ae09",
        "environment_sid": "ZE6ce58c4ff44e3414e02d8598280ebd6c",
        "offset": {
          "x": 1630,
          "y": -240
        },
        "function_sid": "ZH07f30cac54b31d12a419654de3611258",
        "url": "https://serverless-downtime-manager-8207-dev.twil.io/check-for-downtime"
      }
    },
    {
      "name": "setVariablesFlow",
      "type": "set-variables",
      "transitions": [
        {
          "next": "welcome",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{% if widgets.get_client_ddi.parsed.regionCode == \"AR\" %}es-ES{% elsif widgets.get_client_ddi.parsed.regionCode == \"US\" %}en-US{% else %}pt-BR{% endif %}",
            "key": "voiceLanguage"
          },
          {
            "value": "{{widgets.get_client_ddi.parsed.regionCode}}",
            "key": "regionCode"
          },
          {
            "value": "{% if widgets.get_client_ddi.parsed.regionCode == \"AR\" %}woman{% elsif widgets.get_client_ddi.parsed.regionCode == \"US\" %}woman{% else %}Polly.Camila-Neural{% endif %}",
            "key": "botName"
          },
          {
            "value": "{% if widgets.get_client_ddi.parsed.regionCode == \"US\" %}Internacional{% elsif trigger.call.From contains  '19342033317' %}Internacional{% else %}Local{% endif %}",
            "key": "location"
          }
        ],
        "offset": {
          "x": 2790,
          "y": -900
        }
      }
    },
    {
      "name": "welcome",
      "type": "say-play",
      "transitions": [
        {
          "next": "validateCustomer",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 2790,
          "y": -580
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\n¡Hola, bienvenido al centro de llamadas de LogComex!\n\n{% when \"US\" %}\n\nHello, welcome to the LogComex call center!\n\n{% else %}\n\nOlá, seja bem-vindo a central de atendimento LogComex!\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}"
      }
    },
    {
      "name": "validateCustomer",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "welcomeUnsetLanguageBR",
          "event": "noMatch"
        },
        {
          "next": "isWorking",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": ["{{widgets.GetClientInformation.parsed.success}}"],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.success}}",
        "offset": {
          "x": 2410,
          "y": -580
        }
      }
    },
    {
      "name": "welcomeUnsetLanguage",
      "type": "gather-input-on-call",
      "transitions": [
        {
          "next": "validateLanguage",
          "event": "keypress"
        },
        {
          "event": "speech"
        },
        {
          "next": "Copy_of_set_variables_1",
          "event": "timeout"
        }
      ],
      "properties": {
        "voice": "Polly.Lucia-Neural",
        "number_of_digits": 1,
        "speech_timeout": "auto",
        "offset": {
          "x": 1230,
          "y": -580
        },
        "loop": 1,
        "finish_on_key": "#",
        "say": "Ingrese 3 si desea hablar en español;",
        "language": "es-ES",
        "stop_gather": true,
        "gather_language": "en",
        "profanity_filter": "true",
        "timeout": 5
      }
    },
    {
      "name": "welcomeUnsetLanguageBR",
      "type": "say-play",
      "transitions": [
        {
          "next": "welcomeUnsetLanguageUS",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 2020,
          "y": -580
        },
        "loop": 1,
        "say": "Digite 1 se deseja o atendimento em português.",
        "language": "pt-BR"
      }
    },
    {
      "name": "welcomeUnsetLanguageUS",
      "type": "say-play",
      "transitions": [
        {
          "next": "welcomeUnsetLanguage",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "Polly.Kimberly-Neural",
        "offset": {
          "x": 1630,
          "y": -580
        },
        "loop": 1,
        "say": "Enter 2 if you would like to speak in English.",
        "language": "en-US"
      }
    },
    {
      "name": "setLanguage",
      "type": "set-variables",
      "transitions": [
        {
          "next": "isWorking",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{% if widgets.welcomeUnsetLanguage.Digits == \"3\" %}es-ES{% elsif widgets.welcomeUnsetLanguage.Digits == \"2\" %}en-US{% else %}pt-BR{% endif %}",
            "key": "voiceLanguage"
          },
          {
            "value": "{% if widgets.welcomeUnsetLanguage.Digits == \"3\" %}AR{% elsif widgets.welcomeUnsetLanguage.Digits == \"2\" %}US{% else %}BR{% endif %}",
            "key": "regionCode"
          },
          {
            "value": "{% if widgets.welcomeUnsetLanguage.Digits == \"3\" %}woman{% elsif widgets.welcomeUnsetLanguage.Digits == \"2\" %}woman{% else %}Polly.Camila-Neural{% endif %}",
            "key": "botName"
          }
        ],
        "offset": {
          "x": 1230,
          "y": -240
        }
      }
    },
    {
      "name": "outBusinessHour",
      "type": "say-play",
      "transitions": [
        {
          "next": "validateCustomerOutBussinessHour",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 2410,
          "y": 70
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nNuestro horario de atención es de lunes a viernes, de 08:00 a 18:00, por lo tanto, no tenemos ningún agente disponible en este momento. Pero puede contactarnos por correo electrónico: guardioes@logcomex.com o suporte@logcomex.com. Nos pondremos en contacto con usted dentro de la próxima hora laboral.\n\n{% when \"US\" %}\n\nOur opening hours are from Monday to Friday, from 08:00 to 18:00, therefore, we do not have any agents available at the moment. But you can contact us via email: guardioes@logcomex.com or suporte@logcomex.com. We will get back to you within the next business hour.\n\n{% else %}\n\nNosso horário de atendimento é de segunda à sexta, das 08h às 18h, por isso, não temos nenhum agente disponível no momento. Mas você pode nos contatar no e-mail: guardiões@logcomex.com ou suporte@logcomex.com. Te retornaremos na próxima hora útil.\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "validateCustomerOutBussinessHour",
      "type": "split-based-on",
      "transitions": [
        {
          "event": "noMatch"
        },
        {
          "next": "validateCompanyStatus",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": ["{{widgets.GetClientInformation.parsed.success}}"],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.success}}",
        "offset": {
          "x": 2020,
          "y": 70
        }
      }
    },
    {
      "name": "validateCompanyStatus",
      "type": "split-based-on",
      "transitions": [
        {
          "event": "noMatch"
        },
        {
          "next": "setClientDataToCreateTicket",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "isActive",
              "arguments": [
                "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}"
              ],
              "type": "matches_any_of",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}",
        "offset": {
          "x": 1518,
          "y": 70
        }
      }
    },
    {
      "name": "httpCreateTicketToGuardian",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 2020,
          "y": 450
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{\n\"hs_object_id\": \"{{flow.variables.hs_object_id}}\",\n\"customer_name\": \"{{flow.variables.customer_name}}\",\n\"hubspot_owner_id\": \"{{flow.variables.hubspot_owner_id}}\"\n}",
        "url": "https://serverless-functions-4443-dev.twil.io/hubspot-integration/create-ticket-to-guardian"
      }
    },
    {
      "name": "setClientDataToCreateTicket",
      "type": "set-variables",
      "transitions": [
        {
          "next": "httpCreateTicketToGuardian",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{widgets.GetClientInformation.parsed.data.properties.hs_object_id}}",
            "key": "hs_object_id"
          },
          {
            "value": "{{widgets.GetClientInformation.parsed.data.properties.guardiao__cs_}}",
            "key": "hubspot_owner_id"
          },
          {
            "value": "{{widgets.GetClientInformation.parsed.data.properties.firstname}} {{widgets.GetClientInformation.parsed.data.properties.lastname}} ({{widgets.GetClientInformation.parsed.data.properties.phone}})",
            "key": "customer_name"
          }
        ],
        "offset": {
          "x": 1518,
          "y": 450
        }
      }
    },
    {
      "name": "validateInternacional",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "validateCustomerFlow",
          "event": "noMatch"
        },
        {
          "next": "validateCustomerInternational",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "Internacional",
              "arguments": ["{{flow.variables.location}}"],
              "type": "equal_to",
              "value": "Internacional"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{flow.variables.location}}",
        "offset": {
          "x": 3170,
          "y": -580
        }
      }
    },
    {
      "name": "validateCustomerInternational",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayMessageInternational",
          "event": "noMatch"
        },
        {
          "next": "validateCompanyStatusInternational",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": ["{{widgets.GetClientInformation.parsed.success}}"],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.success}}",
        "offset": {
          "x": 3570,
          "y": -580
        }
      }
    },
    {
      "name": "sayMessageInternational",
      "type": "say-play",
      "transitions": [
        {
          "next": "setSubjectInboundInternational",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 3970,
          "y": -900
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nHemos comprobado que aún no eres uno de nuestros clientes. Entonces, lo redirigiremos a uno de nuestros especialistas.\n\n{% when \"US\" %}\n\nWe've checked that you are not one of our customers yet. So, we are going to redirect you to one of our specialists.\n\n{% else %}\n\nVerificamos que você ainda não é um de nossos clientes. Então, vamos redirecioná-lo para um de nossos especialistas.\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}"
      }
    },
    {
      "name": "validateCompanyStatusInternational",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayMessageInternational",
          "event": "noMatch"
        },
        {
          "next": "setSubjectInternational",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "isActive",
              "arguments": [
                "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}"
              ],
              "type": "matches_any_of",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}",
        "offset": {
          "x": 3970,
          "y": -580
        }
      }
    },
    {
      "name": "setSubjectInboundInternational",
      "type": "set-variables",
      "transitions": [
        {
          "next": "sayWaitgingQueue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "send-to-Inbound_International",
            "key": "subject"
          },
          {
            "value": "Opção de fluxo internacional - Não cliente",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 4480,
          "y": -900
        }
      }
    },
    {
      "name": "setSubjectInternational",
      "type": "set-variables",
      "transitions": [
        {
          "next": "sayWaitgingQueue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "send-to-International",
            "key": "subject"
          },
          {
            "value": "Opção de fluxo Internacional - Cliente Ativo",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 4470,
          "y": -580
        }
      }
    },
    {
      "name": "validateAssociatedCompany",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "get_client_ddi",
          "event": "noMatch"
        },
        {
          "next": "httpAssociatedCompany",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": [
                "{{widgets.GetClientInformation.parsed.data.properties.associatedcompanyid}}"
              ],
              "type": "is_not_blank",
              "value": "Is Not Blank"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.data.properties.associatedcompanyid}}",
        "offset": {
          "x": 1630,
          "y": -900
        }
      }
    },
    {
      "name": "httpAssociatedCompany",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "get_client_ddi",
          "event": "success"
        },
        {
          "next": "get_client_ddi",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 2020,
          "y": -900
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{\n\"associatedcompanyid\": \"{{widgets.GetClientInformation.parsed.data.properties.associatedcompanyid}}\",\n\"hs_object_id\": \"{{widgets.GetClientInformation.parsed.data.properties.hs_object_id}}\"\n}",
        "url": "https://serverless-functions-4443-dev.twil.io/hubspot-integration/get-associated-company"
      }
    },
    {
      "name": "validateCustomerFlow",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "gatherNotCustomerFlow",
          "event": "noMatch"
        },
        {
          "next": "validateCompanyStatusFlow",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": ["{{widgets.GetClientInformation.parsed.success}}"],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.success}}",
        "offset": {
          "x": 3120,
          "y": -290
        }
      }
    },
    {
      "name": "validateCompanyStatusFlow",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayNotActiveCustomer",
          "event": "noMatch"
        },
        {
          "next": "sayClientFounded",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "isActive",
              "arguments": [
                "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}"
              ],
              "type": "matches_any_of",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.httpAssociatedCompany.parsed.isCompanyActive}}",
        "offset": {
          "x": 4470,
          "y": -260
        }
      }
    },
    {
      "name": "sayNotActiveCustomer",
      "type": "say-play",
      "transitions": [
        {
          "next": "setSubjectInbound",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 4470,
          "y": 70
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nMe di cuenta de que su empresa aún no es nuestro cliente.\nLo estamos dirigiendo a uno de nuestros expertos en nuestras soluciones.\n\n{% when \"US\" %}\n\nI noticed that your company is not yet our customer.\nWe are directing you to one of our experts in our solutions\n\n{% else %}\n\nNotei que sua empresa ainda não é nosso cliente.\nEstamos te direcionando para um dos nossos especialistas em nossas soluções.\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}"
      }
    },
    {
      "name": "sendToFlexFlow",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 3570,
          "y": 1160
        },
        "workflow": "WWca4a7942493dde9e64b11ae6936b6e4a",
        "channel": "TC2b22a44380e72b5d852f91c64ec153c9",
        "attributes": "{\n\"subject\": \"{{flow.variables.subject}}\",\n{%if widgets.GetClientInformation.parsed.success %}\n\"clientInformation\":{{widgets.GetClientInformation.parsed.data.properties|to_json}},\n{%endif%}\n\"location\": \"{{flow.variables.location}}\", \n\"customers\": {\n\"phone\": \"{{trigger.call.From}}\",\n{%if widgets.GetClientInformation.parsed.success%}\n\"name\": \"{{widgets.GetClientInformation.parsed.data.properties.firstname}} {{widgets.GetClientInformation.parsed.data.properties.lastname}}\",\n\"organization\": \"{% if widgets.GetClientInformation.parsed.data.properties.company %}{{widgets.GetClientInformation.parsed.data.properties.company}}{% else %}Contato sem empresa vinculada{% endif %}\",\n\"email\": \"{% if widgets.GetClientInformation.parsed.data.properties.email %}{{widgets.GetClientInformation.parsed.data.properties.email}}{% else %}Contato sem email vinculado{% endif %}\",\n\"customer_attribute_1\": \"{% if widgets.GetClientInformation.parsed.data.properties.guardian %}{{widgets.GetClientInformation.parsed.data.properties.guardian}}{% else %}Contato sem guardião vinculado{% endif %}\"\n{%else%}\n\"name\": \"Cliente não encontrado\",\n\"organization\": \"Cliente não encontrado\",\n\"email\": \"Cliente não encontrado\",\n\"customer_attribute_1\": \"Cliente não encontrado\"\n{%endif%}\n},\n\"conversations\": {\n\"external_contact\": \"{{trigger.call.To}}\",\n\"selected_option_on_flow\": \"{{flow.variables.optionFlow}}\",\n\"conversation_attribute_9\": \"{{flow.variables.optionFlow}}\"\n}\n}"
      }
    },
    {
      "name": "setSubjectInbound",
      "type": "set-variables",
      "transitions": [
        {
          "next": "sayWaitgingQueue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "send-to-Inbound_1",
            "key": "subject"
          },
          {
            "value": "Opção do fluxo não cliente - fila Inbound_1",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 4470,
          "y": 450
        }
      }
    },
    {
      "name": "gatherNotCustomerFlow",
      "type": "gather-input-on-call",
      "transitions": [
        {
          "next": "validateGatherNotCustomerFlow",
          "event": "keypress"
        },
        {
          "event": "speech"
        },
        {
          "next": "setInvalidGatherNotCustomer",
          "event": "timeout"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "number_of_digits": 1,
        "speech_timeout": "auto",
        "offset": {
          "x": 3120,
          "y": 70
        },
        "loop": 1,
        "finish_on_key": "#",
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nNoté que este número no está registrado en nuestro sistema. Introduzca 1 si ya es cliente;\nIngrese 2 si no;\n\n{% when \"US\" %}\n\nI noticed that this number is not registered in our system. Enter 1 if you are already a customer;\nEnter 2 if not;\n\n{% else %}\n\nNotei que este número não está cadastrado em nosso sistema. Digite 1 se já for cliente;\nDigite 2 se não for;\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}",
        "stop_gather": true,
        "gather_language": "en",
        "profanity_filter": "true",
        "timeout": 5
      }
    },
    {
      "name": "validateGatherNotCustomerFlow",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "setInvalidGatherNotCustomer",
          "event": "noMatch"
        },
        {
          "next": "gatherMenuCustomer",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "1",
              "arguments": ["{{widgets.gatherNotCustomerFlow.Digits}}"],
              "type": "equal_to",
              "value": "1"
            }
          ]
        },
        {
          "next": "sayNotActiveCustomer",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "2",
              "arguments": ["{{widgets.gatherNotCustomerFlow.Digits}}"],
              "type": "equal_to",
              "value": "2"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.gatherNotCustomerFlow.Digits}}",
        "offset": {
          "x": 3130,
          "y": 450
        }
      }
    },
    {
      "name": "sayClientFounded",
      "type": "say-play",
      "transitions": [
        {
          "next": "validateKeyAccount",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 4960,
          "y": -260
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nNoté que este número ya está registrado en nuestro sistema. Y su empresa ya tiene nuestros productos contratados.\n\n{% when \"US\" %}\n\nI noticed that this number is already registered in our system. And your company already has our contracted products.\n\n{% else %}\n\nNotei que este número já está cadastrado em nosso sistema.\nE sua empresa já possui nossos produtos contratados.\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}"
      }
    },
    {
      "name": "gatherMenuCustomer",
      "type": "gather-input-on-call",
      "transitions": [
        {
          "next": "validateGatherMenuCustomer",
          "event": "keypress"
        },
        {
          "event": "speech"
        },
        {
          "next": "setInvalidGatherMenuCustomer",
          "event": "timeout"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "number_of_digits": 1,
        "speech_timeout": "auto",
        "offset": {
          "x": 4960,
          "y": 70
        },
        "loop": 1,
        "finish_on_key": "#",
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\ncomo podemos ayudarte?\n\n1 - Necesito hablar con un tutor sobre mi plan o contratar una nueva función.\n2 - Quiero hacer frente a la renovación del contrato.\n3 - Quiero hablar con soporte.\n4 - Necesito hablar con finanzas.\n\n{% when \"US\" %}\n\nHow can we help you?\n\n1 - I need to talk to a guardian about my plan or hire a new feature.\n2 - I want to deal with the renewal of the contract.\n3 - I want to talk to support.\n4 - I need to talk to finance.\n\n{% else %}\n\nEm que podemos te ajudar?\n\n1 - Preciso falar com um guardião sobre meu plano ou contratar uma nova funcionalidade.\n2 - Quero tratar da renovação de contrato.\n3 - Quero falar com o suporte.\n4 - Preciso falar com o financeiro.\n\n{% endcase %}",
        "language": "{{flow.variables.voiceLanguage}}",
        "stop_gather": true,
        "gather_language": "en",
        "profanity_filter": "true",
        "timeout": 5
      }
    },
    {
      "name": "sayInvalidGatherNotCustomer",
      "type": "say-play",
      "transitions": [
        {
          "next": "gatherNotCustomerFlow",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 3530,
          "y": 330
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nOpción no válida, vuelva a ingresar\n\n{% when \"US\" %}\n\nInvalid option, please re-enter\n\n{% else %}\n\nOpção inválida, por favor digite novamente\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "splitInvalidGatherNotCustomer",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayInvalidGatherNotCustomer",
          "event": "noMatch"
        },
        {
          "next": "sayEndCall",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "> 2",
              "arguments": ["{{flow.variables.count}}"],
              "type": "greater_than",
              "value": "2"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{flow.variables.count}}",
        "offset": {
          "x": 3970,
          "y": 70
        }
      }
    },
    {
      "name": "setInvalidGatherNotCustomer",
      "type": "set-variables",
      "transitions": [
        {
          "next": "splitInvalidGatherNotCustomer",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{flow.variables.count | plus: 1}}",
            "key": "count"
          }
        ],
        "offset": {
          "x": 3530,
          "y": 70
        }
      }
    },
    {
      "name": "sayInvalidWelcomeUnsetLanguage",
      "type": "say-play",
      "transitions": [
        {
          "next": "welcomeUnsetLanguageBR",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 450,
          "y": -240
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nOpción no válida, vuelva a ingresar\n\n{% when \"US\" %}\n\nInvalid option, please re-enter\n\n{% else %}\n\nOpção inválida, por favor digite novamente\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "Copy_of_splitInvalidGatherNotCustomer",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayInvalidWelcomeUnsetLanguage",
          "event": "noMatch"
        },
        {
          "next": "sayEndCall",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "> 2",
              "arguments": ["{{flow.variables.count}}"],
              "type": "greater_than",
              "value": "2"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{flow.variables.count}}",
        "offset": {
          "x": 450,
          "y": -570
        }
      }
    },
    {
      "name": "Copy_of_set_variables_1",
      "type": "set-variables",
      "transitions": [
        {
          "next": "Copy_of_splitInvalidGatherNotCustomer",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{flow.variables.count | plus: 1}}",
            "key": "count"
          }
        ],
        "offset": {
          "x": 840,
          "y": -580
        }
      }
    },
    {
      "name": "validateGatherMenuCustomer",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "setInvalidGatherMenuCustomer",
          "event": "noMatch"
        },
        {
          "next": "setSubjectCustomerFlow",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "1",
              "arguments": ["{{widgets.gatherMenuCustomer.Digits}}"],
              "type": "equal_to",
              "value": "1"
            }
          ]
        },
        {
          "next": "setSubjectCustomerFlow",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "2",
              "arguments": ["{{widgets.gatherMenuCustomer.Digits}}"],
              "type": "equal_to",
              "value": "2"
            }
          ]
        },
        {
          "next": "setSubjectCustomerFlow",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "3",
              "arguments": ["{{widgets.gatherMenuCustomer.Digits}}"],
              "type": "equal_to",
              "value": "3"
            }
          ]
        },
        {
          "next": "setSubjectCustomerFlow",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "4",
              "arguments": ["{{widgets.gatherMenuCustomer.Digits}}"],
              "type": "equal_to",
              "value": "4"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.gatherMenuCustomer.Digits}}",
        "offset": {
          "x": 4960,
          "y": 450
        }
      }
    },
    {
      "name": "sayInvalidGatherMenuCustomer",
      "type": "say-play",
      "transitions": [
        {
          "next": "gatherMenuCustomer",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 5400,
          "y": 450
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nOpción no válida, vuelva a ingresar\n\n{% when \"US\" %}\n\nInvalid option, please re-enter\n\n{% else %}\n\nOpção inválida, por favor digite novamente\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "setInvalidGatherMenuCustomer",
      "type": "set-variables",
      "transitions": [
        {
          "next": "splitInvalidGatherMenuCustomer",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{flow.variables.count | plus: 1}}",
            "key": "count"
          }
        ],
        "offset": {
          "x": 5390,
          "y": 80
        }
      }
    },
    {
      "name": "splitInvalidGatherMenuCustomer",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayInvalidGatherMenuCustomer",
          "event": "noMatch"
        },
        {
          "next": "sayEndCall",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "> 2",
              "arguments": ["{{flow.variables.count}}"],
              "type": "greater_than",
              "value": "2"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{flow.variables.count}}",
        "offset": {
          "x": 5760,
          "y": 70
        }
      }
    },
    {
      "name": "setSubjectCustomerFlow",
      "type": "set-variables",
      "transitions": [
        {
          "next": "validateCustomerGuardian",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{% case widgets.gatherMenuCustomer.Digits %}{% when \"1\" or \"2\" or \"3\" %}send-to-Suporte_SMB_1_Analytics{% else %}send-to-Financeiro{% endcase %}",
            "key": "subject"
          },
          {
            "value": "{% case widgets.gatherMenuCustomer.Digits %}{% when \"1\" %}1 - Preciso falar com um guardião sobre meu plano ou contratar uma nova funcionalidade - Guardião não identificado{% when \"2\" %}2 - Quero tratar da renovação de contrato{% when \"3\" %}3 - Quero falar com o suporte{% else %}4 - Preciso falar com o financeiro{% endcase %}",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 5360,
          "y": 850
        }
      }
    },
    {
      "name": "sayEndCall",
      "type": "say-play",
      "transitions": [
        {
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 3130,
          "y": 850
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nLogComex gracias por su contacto, ¡nos vemos pronto!\n\n{% when \"US\" %}\n\nLogComex thanks you for your contact, see you soon!\n\n{% else %}\n\nA logcomex agradece o seu contato, até breve!\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "validateCustomerGuardian",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sayWaitgingQueue",
          "event": "noMatch"
        },
        {
          "next": "httpGuardianActivity",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "true",
              "arguments": [
                "{{widgets.GetClientInformation.parsed.data.properties.guardiao__cs_}}"
              ],
              "type": "is_not_blank",
              "value": "Is Not Blank"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.data.properties.guardiao__cs_}}",
        "offset": {
          "x": 4960,
          "y": 850
        }
      }
    },
    {
      "name": "httpGuardianActivity",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "setSubjectGuardian",
          "event": "success"
        },
        {
          "next": "setSubjectGuardian",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 5360,
          "y": 1190
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{\n\"workerEmail\":\"{{widgets.GetClientInformation.parsed.data.properties.guardian}}\"\n}",
        "url": "https://serverless-functions-4443-dev.twil.io/utils/validate-worker-available"
      }
    },
    {
      "name": "setSubjectGuardian",
      "type": "set-variables",
      "transitions": [
        {
          "next": "sayWaitgingQueue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{%if widgets.httpGuardianActivity.parsed.to == \"worker\"%}send-to-guardian{% else %}send-to-{{widgets.GetClientInformation.parsed.data.properties.guardianSkill}}{% endif %}",
            "key": "subject"
          },
          {
            "value": "1 - Preciso falar com um guardião sobre meu plano ou contratar uma nova funcionalidade - Guardião {{widgets.GetClientInformation.parsed.data.properties.guardian}}",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 4960,
          "y": 1190
        }
      }
    },
    {
      "name": "sayWaitgingQueue",
      "type": "say-play",
      "transitions": [
        {
          "next": "sendToFlexFlow",
          "event": "audioComplete"
        }
      ],
      "properties": {
        "voice": "{{flow.variables.botName}}",
        "offset": {
          "x": 3580,
          "y": 910
        },
        "loop": 1,
        "say": "{% case flow.variables.regionCode %}\n{% when \"AR\" %}\n\nEspera un momento mientras reenvío tu contacto\n\n{% when \"US\" %}\n\nWait a moment while I forward your contact\n\n{% else %}\n\nAguarde um momento enquanto encaminho seu contato\n\n{% endcase %}",
        "language": "{{flow.variables. voiceLanguage}}"
      }
    },
    {
      "name": "validateLanguage",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "Copy_of_set_variables_1",
          "event": "noMatch"
        },
        {
          "next": "setLanguage",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "[1-3]",
              "arguments": ["{{widgets.welcomeUnsetLanguage.Digits}}"],
              "type": "matches_any_of",
              "value": "1, 2, 3"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.welcomeUnsetLanguage.Digits}}",
        "offset": {
          "x": 840,
          "y": -240
        }
      }
    },
    {
      "name": "validateKeyAccount",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "gatherMenuCustomer",
          "event": "noMatch"
        },
        {
          "next": "setSubjectKA",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "isKA",
              "arguments": [
                "{{widgets.GetClientInformation.parsed.data.properties.squad_cs}}"
              ],
              "type": "matches_any_of",
              "value": "KA, ka, Ka, Key Account, key Account, key account, KEY ACCOUNT"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.GetClientInformation.parsed.data.properties.squad_cs}}",
        "offset": {
          "x": 5390,
          "y": -260
        }
      }
    },
    {
      "name": "setSubjectKA",
      "type": "set-variables",
      "transitions": [
        {
          "next": "validateCustomerGuardian",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "Key Account identificado, direcionado para o guardião {{widgets.GetClientInformation.parsed.data.properties.guardian}}",
            "key": "optionFlow"
          }
        ],
        "offset": {
          "x": 5760,
          "y": -260
        }
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}
